name: Build and Deploy NuGet Packages

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and Pack Core project
      run: |
        cd Core
        dotnet build --configuration Release
        dotnet pack --configuration Release --output ${{ github.workspace }}\Package\Core

    - name: Build and Pack Core.Caching project
      run: |
        cd Core.Caching
        dotnet build --configuration Release
        dotnet pack --configuration Release --output ${{ github.workspace }}\Package\Core.Caching

    - name: Find latest .nupkg file
      id: find-package
      run: |
        $latestPackageCore = Get-ChildItem -Path "${{ github.workspace }}\Package\Core" -Filter *.nupkg | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        Write-Output "Latest package for Core: $latestPackageCore"
        Write-Output "::set-output name=latest_package_core::$latestPackageCore"
        $latestPackageCoreCaching = Get-ChildItem -Path "${{ github.workspace }}\Package\Core.Caching" -Filter *.nupkg | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        Write-Output "Latest package for Core.Caching: $latestPackageCoreCaching"
        Write-Output "::set-output name=latest_package_core_caching::$latestPackageCoreCaching"
    
    - name: Publish NuGet packages
      run: |
        dotnet nuget push ${{ steps.find-package.outputs.latest_package_core_caching }} --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        dotnet nuget push ${{ steps.find-package.outputs.latest_package_core }} --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
